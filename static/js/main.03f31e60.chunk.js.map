{"version":3,"sources":["contexts/auth.context.js","types/auth.types.js","reducers/auth.reducer.js","config/index.js","config/prod.stage.js","services/auth.service.js","components/LoginModal.jsx","components/RegisterModal.jsx","pages/AuthPage.jsx","pages/HomePage.jsx","components/BalanceCard.jsx","components/TransferCard/TransferCard.jsx","components/TransferModal.jsx","shared/ConfirmModal/ConfirmModal.jsx","services/transfer.service.js","pages/DashboardHomePage.jsx","pages/ProfilePage.jsx","pages/DashboardGeneralBalancePage.jsx","pages/DashboardCreditPage.jsx","routers/DashboardRouter.jsx","routers/PrivateRoute.jsx","routers/PublicRoute.jsx","routers/AppRouter.jsx","App.jsx","reportWebVitals.js","index.js","constant/transfer.js","shared/ConfirmModal/ConfirmModal.types.js","lib/date.js"],"names":["AuthContext","createContext","require","authTypes","login","logout","authReducer","state","action","type","payload","logged","config","dev","process","backendUrl","apiUrl","AuthService","this","path","email","password","Promise","resolve","a","bodyObject","fetch","method","headers","body","JSON","stringify","response","json","data","console","log","success","user","error","userObj","profile","token","expiresIn","localStorage","setItem","useStyles","makeStyles","theme","root","margin","spacing","width","display","flexDirection","alignItems","loginTitle","color","textAlign","fontWeight","loginContent","minWidth","loginButtonContainer","marginBottom","borderRadius","padding","boxShadow","blueButton","backgroundColor","whiteButton","LoginModal","onClose","open","classes","dispatch","useContext","authService","history","useHistory","useForm","control","handleSubmit","errors","formState","handle","handleLogin","loginEmail","loginPayload","setLocalStorage","push","Dialog","aria-labelledby","maxWidth","paper","DialogTitle","id","className","DialogContent","noValidate","autoComplete","onSubmit","name","render","field","TextField","label","variant","helperText","message","defaultValue","rules","required","pattern","value","Button","disabled","Object","keys","length","onClick","registerButtonContainer","RegisterModal","fieldsErrors","hola","names","password2","buttonContainer","marginTop","loginButton","registerButton","title","AuthPage","React","useState","openLogin","setOpenLogin","openRegister","setOpenRegister","style","backgroundImage","HomePage","to","BalanceCard","balanceCardData","transfers","ingresos","filter","transfer","cashFlow","cashFlowLabels","ingreso","reduce","acc","curr","amount","egresos","egreso","formatData","map","item","header","actionsBtn","transition","TransferCard","labelCard","amountCard","transferCardEvent","description","Divider","formatDate","dateTransfer","eventsTransferCard","update","autoFocus","delete","createBtn","updateBtn","form","TransferDialog","actionTransfer","transferDialogEvent","transferData","useTheme","fullScreen","useMediaQuery","breakpoints","down","getValues","setValue","useEffect","details","formatInputDate","actionSelected","handleClose","eventsTransferDialog","close","handleCreate","create","handleUpdate","_id","actionsTransfer","multiline","rows","InputLabelProps","shrink","Select","MenuItem","DialogActions","ConfirmModal","confirmModalData","confirmModalEvent","typesConfirmModal","confirm","idData","TransferService","parse","getItem","Error","Authorization","apiResponse","postObj","idTransfer","addBtn","menuButton","marginRight","fullList","list","flexGrow","DashboardHomePage","transferService","openTransferDialog","setOpenTransferDialog","openConfirmModal","setOpenConfirmModal","setActionTransfer","setConfirmModalData","transferDataDialog","setTransferDataDialog","dataTransfers","setDataTransfer","getAllTransfers","handleCreateTransfer","createTransfer","handleUpdateTransfer","updateTransfer","newDataTransfer","handleDeleteTransfer","deleteTransfer","handleTransferCardEvent","TransferModal","ProfilePage","DashboardGeneralBalancePage","DashboardCreditPage","container","DashboardRouter","useRouteMatch","url","drawer","setDrawer","anchorEl","setAnchorEl","Boolean","toggleDrawer","opened","event","key","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","aria-controls","aria-haspopup","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","SwipeableDrawer","anchor","onOpen","List","ListItem","button","component","Link","ListItemIcon","ListItemText","primary","Container","fixed","exact","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","init","App","useReducer","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","exports","addLeadingZeros","n","date","currentDatetime","Date","year","getFullYear","month","getMonth","day","getDate","sign"],"mappings":"yOAIeA,G,OAFKC,EAFMC,EAAQ,GAA1BD,kB,OCKOE,EALG,CAChBC,MAAS,eACTC,OAAS,kBC6BIC,EAjBK,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAC1C,OAAQA,EAAOC,MACb,KAAKN,EAAUC,MACb,OAAO,2BACFI,EAAOE,SADZ,IAEEC,QAAQ,IAEZ,KAAKR,EAAUE,OACb,MAAO,CACLM,QAAQ,GAGZ,QACE,OAAOJ,I,sHCnBEK,EALA,CACbC,KAAaC,EACbC,WCLiB,CACjBC,OAAQ,4CDI2EA,QE6DtEC,E,WA/Db,aAAe,oBACbC,KAAKC,KAAO,O,8CAGd,YAEI,IAAD,OADDC,EACC,EADDA,MAAOC,EACN,EADMA,SAEP,OAAO,IAAIC,QAAJ,uCAAY,WAAOC,GAAP,mBAAAC,EAAA,sEAETC,EAAa,CACjBL,QAAOC,YAHM,SAKQK,MAAM,GAAD,OAAId,EAAOG,WAAX,YAAyB,EAAKI,KAA9B,gBAAkD,CAC5EQ,OAAU,OACVC,QAAU,CACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KAVR,cAKTO,EALS,gBAYIA,EAASC,OAZb,cAYTC,EAZS,OAafC,QAAQC,IAAI,QAASF,GAbN,kBAcRX,EAAQ,CAAEc,SAAS,EAAM3B,QAASwB,EAAKI,QAd/B,2DAgBRf,EAAQ,CAAEgB,MAAK,QAhBP,0DAAZ,yD,yBAqBT,YAEI,IAAD,OADDnB,EACC,EADDA,MAAOC,EACN,EADMA,SAEP,OAAO,IAAIC,QAAJ,uCAAY,WAAOC,GAAP,mBAAAC,EAAA,sEAETC,EAAa,CACjBL,QAAOC,YAHM,SAKQK,MAAM,GAAD,OAAId,EAAOG,WAAX,YAAyB,EAAKI,KAA9B,iBAAmD,CAC7EQ,OAAU,OACVC,QAAU,CACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KAVR,cAKTO,EALS,gBAYIA,EAASC,OAZb,cAYTC,EAZS,OAafC,QAAQC,IAAI,QAASF,GAbN,kBAcRX,EAAQ,CAAEc,SAAS,EAAM3B,QAAS,MAd1B,2DAgBRa,EAAQ,CAAEgB,MAAK,QAhBP,0DAAZ,yD,6BAqBT,YAEI,IACIC,EAAU,CACdpB,MAFD,EADDA,MAGSqB,QAFR,EADMA,QAGWC,MAFjB,EADeA,MAGSC,UAFxB,EADsBA,WAKvBR,QAAQC,IAAI,UAAWI,GACvBI,aAAaC,QAAQ,OAAQf,KAAKC,UAAL,eAAoBS,S,YCpD/CM,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,OAASF,EAAMG,QAAQ,GACvBC,MAAS,SAEXC,QAAgB,OAChBC,cAAgB,SAChBC,WAAgB,UAElBC,WAAY,CACVC,MAAa,UACbC,UAAa,SACbC,WAAa,QAEfC,aAAc,CACZC,SAAU,SAEZC,qBAAsB,CACpBT,QAAgB,OAChBC,cAAgB,SAChBC,WAAgB,SAChB,QAAgB,CACdQ,aAAc,QAEhB,aAAc,CACZC,aAAe,MACfC,QAAe,YACfb,MAAe,QACfO,WAAe,MACfO,UAAe,kCAGnBC,WAAY,CACVC,gBAAkB,UAClBX,MAAkB,QAClB,UAAkB,CAChBW,gBAAiB,YAGrBC,YAAa,CACXD,gBAAkB,QAClBX,MAAkB,UAClB,UAAkB,CAChBW,gBAAiB,gBA8IRE,EAzII,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KACvBC,EAAU3B,IAER4B,EAAaC,qBAAW3E,GAAxB0E,SACFE,EAAc,IAAI3D,EAClB4D,EAAUC,cALwB,EASpCC,cADFC,EARsC,EAQtCA,QAASC,EAR6B,EAQ7BA,aAA2BC,EARE,EAQfC,UAAaD,OAOhCE,EAAS,aAGTC,EAAW,uCAAG,qCAAA7D,EAAA,yDAASJ,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAC7BD,EADa,oDAEbC,EAFa,iEAG6BuD,EAAYU,WAAW,CAAElE,QAAOC,aAH7D,mBAGVkB,EAHU,EAGVA,MAAgBgD,EAHN,EAGH7E,SACX6B,EAJc,mDAKlBJ,QAAQC,IAAI,WAAYmD,GACxBpD,QAAQC,IAAI,WAAYsC,GACxBE,EAAYY,gBAAgBD,GAC5BV,EAAQY,KAAK,mBARK,4CAAH,sDAgBjB,OACE,eAACC,EAAA,EAAD,CACEnB,QAzBgB,WAClBA,EAAQ,KAyBNoB,kBAAgB,sBAChBnB,KAAMA,EACNoB,SAAS,KACTnB,QAAS,CAAEoB,MAAOpB,EAAQb,cAL5B,UAOE,cAACkC,EAAA,EAAD,CAAaC,GAAG,sBAAsBC,UAAWvB,EAAQjB,WAAzD,+BAGA,cAACyC,EAAA,EAAD,UACE,uBACED,UAAWvB,EAAQxB,KACnBiD,YAAU,EACVC,aAAa,MACbC,SAAUnB,GArBD,SAAC/C,GAChBC,QAAQC,IAAI,OAAQF,GACpBmD,EAAYnD,MAeR,UAME,cAAC,IAAD,CACEmE,KAAK,QACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAACC,EAAA,EAAD,2BACMD,GADN,IAEER,GAAG,QACHM,KAAK,QACLI,MAAM,qBACNC,QAAQ,WACRC,WAAYzB,EAAO9D,MAAQ8D,EAAO9D,MAAMwF,QAAU,KAClDrE,MAAO2C,EAAO9D,UAGlB4D,QAASA,EACT6B,aAAa,GACbC,MAAO,CACLC,SAAW,WACXC,QAAW,CACTC,MAAU,4CACVL,QAAU,4BAIhB,cAAC,IAAD,CACEP,KAAK,WACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAACC,EAAA,EAAD,2BACMD,GADN,IAEER,GAAG,WACHM,KAAK,WACLI,MAAM,gBACNC,QAAQ,WACRC,WAAYzB,EAAO7D,SAAW6D,EAAO7D,SAASuF,QAAU,KACxDrE,MAAO2C,EAAO7D,aAGlB2D,QAASA,EACT6B,aAAa,GACbC,MAAO,CACLC,SAAU,cAGd,sBAAKf,UAAWvB,EAAQX,qBAAxB,UACE,cAACoD,EAAA,EAAD,CACER,QAAQ,YACRjD,MAAM,YACNuC,UAAWvB,EAAQN,WACnB1D,KAAK,SACL0G,SAAUC,OAAOC,KAAKnC,GAAQoC,OAAS,EALzC,+BAUA,wCAEA,cAACJ,EAAA,EAAD,CACER,QAAQ,YACRjD,MAAM,YACN8D,QAASnC,EACTY,UAAWvB,EAAQJ,YAJrB,0CASA,cAAC6C,EAAA,EAAD,CACER,QAAQ,YACRjD,MAAM,YACN8D,QAASnC,EACTY,UAAWvB,EAAQJ,YAJrB,wDCxKNvB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,OAASF,EAAMG,QAAQ,GACvBC,MAAS,SAEXC,QAAgB,OAChBC,cAAgB,SAChBC,WAAgB,UAElBiE,wBAAyB,CACvBnE,QAAgB,OAChBC,cAAgB,SAChBC,WAAgB,SAChB,QAAgB,CACdQ,aAAc,QAEhB,aAAc,CACZC,aAAe,MACfC,QAAe,YACfb,MAAe,QACfO,WAAe,MACfO,UAAe,sCA4JNuD,EAvJO,SAAC,GAAuB,IAArBlD,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAC1BC,EAAU3B,IAD2B,EAIvCiC,cADFC,EAHyC,EAGzCA,QAASC,EAHgC,EAGhCA,aAAsByC,EAHU,EAGlBxC,OAWnBE,EAAS,aAQf,OACE,eAACM,EAAA,EAAD,CAAQnB,QAjBU,WAClBA,EAAQ,CAAEoD,KAAM,QAgBchC,kBAAgB,sBAAsBnB,KAAMA,EAA1E,UAEE,cAACsB,EAAA,EAAD,CAAaC,GAAG,sBAAhB,yBAIA,cAACE,EAAA,EAAD,UACE,uBACED,UAAWvB,EAAQxB,KACnBiD,YAAU,EACVC,aAAa,MACbC,SAAUnB,GAhBD,SAAC/C,GAChBC,QAAQC,IAAI,OAAQF,MAWhB,UAOE,cAAC,IAAD,CACEmE,KAAK,QACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAACC,EAAA,EAAD,2BACMD,GADN,IAEER,GAAG,QACHM,KAAK,QACLI,MAAM,kBACNC,QAAQ,WACRC,YAAwB,OAAZe,QAAY,IAAZA,OAAA,EAAAA,EAAcE,OAAd,OAAsBF,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAcE,MAAMhB,QAAU,KAChErE,MAAK,OAAEmF,QAAF,IAAEA,OAAF,EAAEA,EAAcE,UAGzB5C,QAASA,EACT6B,aAAa,GACbC,MAAO,CACLC,SAAU,cAGd,cAAC,IAAD,CACEV,KAAK,QACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAACC,EAAA,EAAD,2BACMD,GADN,IAEER,GAAG,QACHM,KAAK,QACLI,MAAM,QACNC,QAAQ,WACRC,YAAwB,OAAZe,QAAY,IAAZA,OAAA,EAAAA,EAActG,OAAd,OAAsBsG,QAAtB,IAAsBA,OAAtB,EAAsBA,EAActG,MAAMwF,QAAU,KAChErE,MAAK,OAAEmF,QAAF,IAAEA,OAAF,EAAEA,EAActG,UAGzB4D,QAASA,EACT6B,aAAa,GACbC,MAAO,CACLC,SAAW,WACXC,QAAW,CACTC,MAAU,4CACVL,QAAU,4BAIhB,cAAC,IAAD,CACEP,KAAK,WACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAACC,EAAA,EAAD,2BACMD,GADN,IAEER,GAAG,WACHM,KAAK,WACLI,MAAM,gBACNC,QAAQ,WACRC,YAAwB,OAAZe,QAAY,IAAZA,OAAA,EAAAA,EAAcrG,UAAd,OAAyBqG,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAcrG,SAASuF,QAAU,KACtErE,MAAK,OAAEmF,QAAF,IAAEA,OAAF,EAAEA,EAAcrG,aAGzB2D,QAASA,EACT6B,aAAa,GACbC,MAAO,CACLC,SAAU,cAGd,cAAC,IAAD,CACEV,KAAK,YACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAACC,EAAA,EAAD,2BACMD,GADN,IAEER,GAAG,YACHM,KAAK,YACLI,MAAM,wBACNC,QAAQ,WACRC,YAAwB,OAAZe,QAAY,IAAZA,OAAA,EAAAA,EAAcG,WAAd,OAA0BH,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAcG,UAAUjB,QAAU,KACxErE,MAAK,OAAEmF,QAAF,IAAEA,OAAF,EAAEA,EAAcG,cAGzB7C,QAASA,EACT6B,aAAa,GACbC,MAAO,CACLC,SAAU,cAId,sBAAKf,UAAWvB,EAAQ+C,wBAAxB,UACE,cAACN,EAAA,EAAD,CACER,QAAQ,YACRjD,MAAM,YACNhD,KAAK,SAHP,wBAQA,qCAEA,cAACyG,EAAA,EAAD,CAAQR,QAAQ,YAAYjD,MAAM,YAAY8D,QAASnC,EAAvD,oBAIA,cAAC8B,EAAA,EAAD,CAAQR,QAAQ,YAAYjD,MAAM,YAAY8D,QAASnC,EAAvD,kCClKNtC,EAAYC,aAAW,iBAAO,CAClC+E,gBAAiB,CACfC,UAAgB,OAChB1E,QAAgB,OAChBC,cAAgB,SAChBC,WAAgB,SAChB,aAAgB,CACdS,aAAe,MACfC,QAAe,YACfb,MAAe,QACfO,WAAe,MACfO,UAAe,iCAEjB,yBAA0B,CACxBH,aAAc,SAGlBiE,YAAa,CACX5D,gBAAkB,UAClBX,MAAkB,QAClB,UAAkB,CAChBW,gBAAiB,YAGrB6D,eAAgB,CACd7D,gBAAkB,UAClBX,MAAkB,QAClB,UAAkB,CAChBW,gBAAiB,YAGrB8D,MAAO,CACLxE,UAAW,cAwDAyE,EApDE,WACf,IAAM1D,EAAU3B,IADK,EAEasF,IAAMC,UAAS,GAF5B,mBAEdC,EAFc,KAEHC,EAFG,OAGmBH,IAAMC,UAAS,GAHlC,mBAGdG,EAHc,KAGAC,EAHA,KAKrBtG,QAAQC,IAAI,YAAa,CAAEkG,YAAWE,iBAmBtC,OACE,sBAAKxC,UAAU,iBAAf,UACE,qBACEA,UAAU,QACV0C,MAAO,CAAEC,gBAAgB,QAAD,OAAU7H,sBAAV,4BAE1B,qBAAKkF,UAAU,QAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAWvB,EAAQyD,MAAvB,oDACA,sBAAKlC,UAAWvB,EAAQqD,gBAAxB,UACE,cAACZ,EAAA,EAAD,CAAQR,QAAQ,YAAYjD,MAAM,UAAU8D,QA3BlC,WAClBgB,GAAa,IA0B6DvC,UAAWvB,EAAQuD,YAArF,+BAGA,cAACd,EAAA,EAAD,CAAQR,QAAQ,YAAYjD,MAAM,YAAY8D,QA3BjC,WACrBkB,GAAgB,IA0B+DzC,UAAWvB,EAAQwD,eAA1F,iCAON,cAAC,EAAD,CAAYzD,KAAM8D,EAAW/D,QA9BR,SAACoD,GACxBxF,QAAQC,IAAI,OAAQuF,GACpBY,GAAa,MA6BX,cAAC,EAAD,CAAe/D,KAAMgE,EAAcjE,QA1BX,SAACoD,GAC3BxF,QAAQC,IAAI,OAAQuF,GACpBc,GAAgB,UChDLG,EAXE,WAEf,OADAzG,QAAQC,IAAI,WAEV,gCACE,yDACA,2DACA,cAAC,IAAD,CAAMyG,GAAG,QAAT,sB,4JC6DSC,GAlEK,SAAC,GAEd,IAwBCC,EAvBa,SAACC,GAClB,IAAMC,EAAWD,EACdE,QAAO,SAACC,GAAD,OAAcA,EAASC,WAAaC,iBAAeC,WAC1DC,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,EAAKC,SAAQ,GACtCC,EAAUX,EACbE,QAAO,SAACC,GAAD,OAAcA,EAASC,WAAaC,iBAAeO,UAC1DL,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,EAAKC,SAAQ,GAC5C,MAAO,CACL,CACEjD,MAAS,WACTiD,OAAST,GAEX,CACExC,MAAS,UACTiD,OAASC,GAEX,CACElD,MAAS,UACTiD,OAAST,EAAWU,IAKFE,CAxBpB,EADJ3H,MA4BA,OADAC,QAAQC,IAAI,UAEV,qBAAK4D,UAAU,oBAAf,SAEI+C,EAAgBe,KAAI,SAACC,GAAD,OAClB,sBAAK/D,UAAU,qBAAf,UACE,8BAAM+D,EAAKtD,QACX,sBAAMT,UAAU,WAChB,4CAAa+D,EAAKL,YAHqBK,EAAKtD,a,4BC7BlD3D,GAAYC,aAAW,iBAAO,CAClCiH,OAAQ,CACN3G,QAAU,OACVH,OAAU,UAEZ+G,WAAY,CACV5G,QAAa,OACbE,WAAa,SACb2G,WAAa,4BA2GFC,GAvGM,SAAC,GAGf,IASDC,EACAC,EAZJlB,EAEI,EAFJA,SACAmB,EACI,EADJA,kBAEM7F,EAAU3B,KAUhB,OAAQqG,EAASC,UACf,KAAKC,iBAAeC,QAClBc,EAAY,qBAAKpE,UAAS,+BAA0BqD,iBAAeC,SAAvD,qBACZe,EAAa,8CAAelB,EAASO,UACrC,MACF,KAAKL,iBAAeO,OAClBQ,EAAY,qBAAKpE,UAAS,+BAA0BqD,iBAAeO,QAAvD,oBACZS,EAAa,8CAAelB,EAASO,UAqBzC,OASE,cAPA,CAOA,OACE1D,UAAU,qBADZ,UAGE,sBAAKA,UAAWvB,EAAQuF,OAAxB,UACE,8BACGb,EAASoB,cAEZ,sBAAMvE,UAAU,WAEdqE,EAGAD,KAGJ,cAACI,GAAA,EAAD,IACA,sBAAKxE,UAAWvB,EAAQwF,WAAxB,UACE,8BACIQ,sBAAWtB,EAASuB,gBAExB,sBAAM1E,UAAU,WAChB,cAACkB,EAAA,EAAD,CACEK,QA7CW,WACjB+C,EAAkB,CAChB7J,KAAUkK,qBAAmBC,OAC7BlK,QAAUyI,KA2CN1F,MAAM,UACNoH,WAAS,EAHX,wBAOA,cAAC3D,EAAA,EAAD,CACEK,QA7CW,WACjB+C,EAAkB,CAChB7J,KAAUkK,qBAAmBG,OAC7BpK,QAAUyI,KA2CN1F,MAAM,UACNoH,WAAS,EAHX,6B,uCCzFF/H,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,KAG1B4H,UAAY,GACZC,UAAY,GACZC,KAAY,CACV,QAAS,CACP/H,OAAWF,EAAMG,QAAQ,GACzBU,SAAW,SAEbR,QAAgB,OAChBC,cAAgB,SAChBC,WAAgB,cAuQL2H,GAnQQ,SAAC,GAKjB,IAJL1G,EAII,EAJJA,KACA2G,EAGI,EAHJA,eACAC,EAEI,EAFJA,oBACAC,EACI,EADJA,aAEAlJ,QAAQC,IAAI,eAAgBiJ,GAC5B,IAAM5G,EAAU3B,KAEVE,EAAQsI,eACRC,EAAaC,aAAcxI,EAAMyI,YAAYC,KAAK,OALpD,EASA3G,cADFC,EARE,EAQFA,QAAsBE,EARpB,EAQOC,UAAaD,OAAUyG,EAR9B,EAQ8BA,UAAWC,EARzC,EAQyCA,SAG7CC,qBAAU,WACR1J,QAAQC,IAAI,WAAYiJ,GACpB7G,IACFrC,QAAQC,IAAI,YACZwJ,EAAS,cAAeP,EAAad,aACrCqB,EAAS,UAAWP,EAAaS,SACjCF,EAAS,SAAUP,EAAa3B,QAChCkC,EAAS,eAAgBG,2BAAgBV,EAAaX,eACtDkB,EAAS,WAAYP,EAAajC,aAKnC,CAAC5E,IAEJ,IAuCIwH,EAvCEC,EAAc,WAElBb,EAAoB,CAClB3K,KAAUyL,uBAAqBC,MAC/BzL,QAAU,MAIR0L,EAAe,SAAClK,GACpBkJ,EAAoB,CAClB3K,KAAUyL,uBAAqBG,OAC/B3L,QAAUwB,KAIRoK,EAAe,SAACpK,GACpBkJ,EAAoB,CAClB3K,KAAUyL,uBAAqBtB,OAE/BlK,QAAO,2BAAQwB,GAAR,IAAcqK,IAAKlB,EAAakB,SAIrCtH,EAAY,uCAAG,WAAO/C,GAAP,SAAAV,EAAA,sDACnBW,QAAQC,IAAI,OAAQF,GADD,KAEXiJ,EAFW,cAGZqB,kBAAgBH,OAHJ,SAOZG,kBAAgB5B,OAPJ,wBAIfwB,EAAalK,GAJE,kCAQfoK,EAAapK,GARE,iGAAH,sDAiBlB,OAAQiJ,GACN,KAAKqB,kBAAgBH,OACnBL,EACE,mCACE,cAAC9E,EAAA,EAAD,CACEK,QAAS,kBAAMtC,EAAa0G,MAC5BlI,MAAM,UACNoH,WAAS,EACT7E,UAAWvB,EAAQsG,UAJrB,qBAUJ,MAEF,KAAKyB,kBAAgB5B,OACnBoB,EACE,mCACE,cAAC9E,EAAA,EAAD,CACEK,QAAS,kBAAMtC,EAAa0G,MAC5BlI,MAAM,UACNoH,WAAS,EACT7E,UAAWvB,EAAQuG,UAJrB,0BAgBR,OACE,mCACE,eAACtF,EAAA,EAAD,CACE6F,WAAYA,EACZ/G,KAAMA,EACND,QAAS0H,EACTtG,kBAAgB,0BAJlB,UAME,cAACG,EAAA,EAAD,CAAaC,GAAG,0BAAhB,6CAGA,cAACE,EAAA,EAAD,UACE,uBACED,UAAWvB,EAAQwG,KACnB/E,YAAU,EACVC,aAAa,MAHf,UAKE,cAAC,IAAD,CACEE,KAAK,cACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAACC,EAAA,EAAD,2BACMD,GADN,IAEER,GAAG,cACHM,KAAK,cACLI,MAAM,cACNC,QAAQ,WACRC,WAAYzB,EAAOqF,YAAcrF,EAAOqF,YAAY3D,QAAU,KAC9DrE,MAAO2C,EAAOqF,gBAGlBvF,QAASA,EACT6B,aAAa,GACbC,MAAO,CACLC,SAAU,cAId,cAAC,IAAD,CACEV,KAAK,UACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAACC,EAAA,EAAD,2BACMD,GADN,IAEER,GAAG,UACHM,KAAK,UACLI,MAAM,WACNC,QAAQ,WACR+F,WAAS,EACTC,KAAM,EACN/F,WAAYzB,EAAO4G,QAAU5G,EAAO4G,QAAQlF,QAAU,KACtDrE,MAAO2C,EAAO4G,YAGlB9G,QAASA,EACT6B,aAAa,GACbC,MAAO,CACLC,SAAU,cAId,cAAC,IAAD,CACEV,KAAK,SACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAACC,EAAA,EAAD,2BACMD,GADN,IAEER,GAAG,SACHtF,KAAK,SACL4F,KAAK,SACLI,MAAM,QACNC,QAAQ,WACRC,WAAYzB,EAAOwE,OAASxE,EAAOwE,OAAO9C,QAAU,KACpDrE,MAAO2C,EAAOwE,WAGlB1E,QAASA,EACT6B,aAAa,GACbC,MAAO,CACLC,SAAU,cAId,cAAC,IAAD,CACEV,KAAK,eACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,cAACC,EAAA,EAAD,2BACMD,GADN,IAEER,GAAG,eACHM,KAAK,eACL5F,KAAK,OACLgG,MAAM,sBACNC,QAAQ,WACRC,WAAYzB,EAAOwF,aAAexF,EAAOwF,aAAa9D,QAAU,KAChErE,MAAO2C,EAAOwF,aACdiC,gBAAiB,CACfC,QAAQ,OAId5H,QAASA,EACT6B,aAAa,GACbC,MAAO,CACLC,SAAU,cAId,cAAC,IAAD,CACEV,KAAK,WACLC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACN,eAACsG,GAAA,EAAD,2BACMtG,GADN,IAEER,GAAG,WACHM,KAAK,WACLK,QAAQ,WAJV,UAME,cAACoG,EAAA,EAAD,CAAU7F,MAAM,UAAhB,qBACA,cAAC6F,EAAA,EAAD,CAAU7F,MAAM,SAAhB,yBAGJjC,QAASA,EACT6B,aAAa,GACbC,MAAO,CACLC,SAAU,mBAKlB,eAACgG,GAAA,EAAD,WACE,cAAC7F,EAAA,EAAD,CAAQ2D,WAAS,EAACtD,QAAS0E,EAAaxI,MAAM,UAA9C,sBAIEuI,W,SCjQNlJ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,KAG1BoH,YAAa,OAoEAyC,GAjEM,SAAC,GAIf,IAHLxI,EAGI,EAHJA,KACAyI,EAEI,EAFJA,iBACAC,EACI,EADJA,kBAEMzI,EAAU3B,KACVE,EAAQsI,eACRC,EAAaC,aAAcxI,EAAMyI,YAAYC,KAAK,OAElDO,EAAc,WAClBiB,EAAkB,CAChBzM,KAAU0M,qBAAkBhB,MAC5BzL,QAAU,MAYd,OADAyB,QAAQC,IAAI,SAAU,CAAE6K,mBAAkBzI,OAAM0I,sBAE9C,mCACE,eAACxH,EAAA,EAAD,CACE6F,WAAYA,EACZ/G,KAAMA,EACND,QAAS0H,EACTtG,kBAAgB,0BAJlB,UAME,cAACG,EAAA,EAAD,CAAaC,GAAG,0BAAhB,SACIkH,EAAiB/E,QAGrB,cAACjC,EAAA,EAAD,UACE,sBAAMD,UAAWvB,EAAQ8F,YAAzB,SACI0C,EAAiB1C,gBAIvB,eAACwC,GAAA,EAAD,WACE,cAAC7F,EAAA,EAAD,CAAQ2D,WAAS,EAACtD,QAAS0E,EAAaxI,MAAM,UAA9C,sBAGA,cAACyD,EAAA,EAAD,CAAQ2D,WAAS,EAACtD,QA9BJ,WACpB2F,EAAkB,CAChBzM,KAAU0M,qBAAkBC,QAC5B1M,QAAUuM,EAAiBI,UA2BmB5J,MAAM,UAAhD,gCC2EK6J,G,WAvIb,aAAe,oBACbpM,KAAKC,KAAO,W,mDAGd,WAAmB,IAAD,OAChB,OAAO,IAAIG,QAAJ,uCAAY,WAAOC,GAAP,uBAAAC,EAAA,kEAETc,EAAOR,KAAKyL,MAAM3K,aAAa4K,QAAQ,SAF9B,sBAGE,IAAIC,MAAM,qBAHZ,cAKP/K,EAAUJ,EAAVI,MALO,SAOQhB,MAAM,GAAD,OAAId,EAAOG,WAAX,YAAyB,EAAKI,KAA9B,QAA0C,CACpEQ,OAAU,MACVC,QAAU,CACR8L,cAAehL,KAVJ,cAOTV,EAPS,iBAayBA,EAASC,OAblC,wBAaG0L,EAbH,EAaP3L,SACRG,QAAQC,IAAI,QAASuL,GAdN,kBAeRpM,EAAQ,CAAEc,SAAS,EAAM3B,QAASiN,KAf1B,2DAiBRpM,EAAQ,CAAEgB,MAAK,QAjBP,0DAAZ,yD,4BAsBT,YAMI,IAAD,OALDuJ,EAKC,EALDA,QACAvB,EAIC,EAJDA,YACAb,EAGC,EAHDA,OACAgB,EAEC,EAFDA,aACAtB,EACC,EADDA,SAEA,OAAO,IAAI9H,QAAJ,uCAAY,WAAOC,GAAP,uBAAAC,EAAA,kEAETc,EAAOR,KAAKyL,MAAM3K,aAAa4K,QAAQ,SAF9B,sBAGE,IAAIC,MAAM,qBAHZ,cAIP/K,EAAUJ,EAAVI,MAEFkL,EAAU,CACd9B,UACAvB,cACAb,SACAgB,eACAtB,YAXa,SAcQ1H,MAAM,GAAD,OAAId,EAAOG,WAAX,YAAyB,EAAKI,KAA9B,WAA6C,CACvEQ,OAAU,OACVC,QAAU,CACR,eAAiB,mBACjB8L,cAAiBhL,GAEnBb,KAAMC,KAAKC,UAAU6L,KApBR,cAcT5L,EAdS,iBAsBIA,EAASC,OAtBb,eAsBTC,EAtBS,OAuBfC,QAAQC,IAAI,QAASF,GAvBN,kBAwBRX,EAAQ,CAAEc,SAAS,EAAM3B,QAASwB,KAxB1B,2DA0BRX,EAAQ,CAAEgB,MAAK,QA1BP,0DAAZ,yD,4BA+BT,YAOI,IAAD,OANDuJ,EAMC,EANDA,QACAvB,EAKC,EALDA,YACAb,EAIC,EAJDA,OACAgB,EAGC,EAHDA,aACAtB,EAEC,EAFDA,SACAyE,EACC,EADDA,WAEA,OAAO,IAAIvM,QAAJ,uCAAY,WAAOC,GAAP,uBAAAC,EAAA,kEAETc,EAAOR,KAAKyL,MAAM3K,aAAa4K,QAAQ,SAF9B,sBAGE,IAAIC,MAAM,qBAHZ,cAIP/K,EAAUJ,EAAVI,MAERP,QAAQC,IAAI,aAAcyL,GACpBD,EAAU,CACd9B,UACAvB,cACAb,SACAgB,eACAtB,WACAmD,IAAKsB,GAbQ,SAgBQnM,MAAM,GAAD,OAAId,EAAOG,WAAX,YAAyB,EAAKI,KAA9B,WAA6C,CACvEQ,OAAU,OACVC,QAAU,CACR,eAAiB,mBACjB8L,cAAiBhL,GAEnBb,KAAMC,KAAKC,UAAU6L,KAtBR,cAgBT5L,EAhBS,iBAwBIA,EAASC,OAxBb,eAwBTC,EAxBS,OAyBfC,QAAQC,IAAI,QAASF,GAzBN,kBA0BRX,EAAQ,CAAEc,SAAS,EAAM3B,QAASwB,KA1B1B,2DA4BRX,EAAQ,CAAEgB,MAAK,QA5BP,0DAAZ,yD,4BAiCT,YAEI,IAAD,OADDsL,EACC,EADDA,WAEA,OAAO,IAAIvM,QAAJ,uCAAY,WAAOC,GAAP,uBAAAC,EAAA,kEAETc,EAAOR,KAAKyL,MAAM3K,aAAa4K,QAAQ,SAF9B,sBAGE,IAAIC,MAAM,qBAHZ,cAIP/K,EAAUJ,EAAVI,MAEFkL,EAAU,CAAEC,cANH,SAQQnM,MAAM,GAAD,OAAId,EAAOG,WAAX,YAAyB,EAAKI,KAA9B,WAA6C,CACvEQ,OAAU,OACVC,QAAU,CACR,eAAiB,mBACjB8L,cAAiBhL,GAEnBb,KAAMC,KAAKC,UAAU6L,KAdR,cAQT5L,EARS,iBAgBIA,EAASC,OAhBb,eAgBTC,EAhBS,OAiBfC,QAAQC,IAAI,QAASF,GAjBN,kBAkBRX,EAAQ,CAAEc,SAAS,EAAM3B,QAASwB,KAlB1B,2DAoBRX,EAAQ,CAAEgB,MAAK,QApBP,0DAAZ,2D,KCnGLO,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,KAG1B2K,OAAQ,CACN1K,MAAS,OACTF,OAAS,UAEX6K,WAAY,CACVC,YAAahL,EAAMG,QAAQ,IAE7B8K,SAAU,CACR7K,MAAO,SAET8K,KAAM,CACJ9K,MAAO,KAET8E,MAAO,CACLiG,SAAU,OA4JCC,GAxJW,WACxB,IAAMC,EAAkB,IAAIf,GACtB7I,EAAU3B,KAFc,EAGsBuF,oBAAS,GAH/B,mBAGvBiG,EAHuB,KAGHC,EAHG,OAIkBlG,oBAAS,GAJ3B,mBAIvBmG,EAJuB,KAILC,EAJK,OAKcpG,mBAASmE,kBAAgBH,QALvC,mBAKvBlB,EALuB,KAKPuD,EALO,OAMkBrG,mBAAS,CACvDH,MAAc,GACdqC,YAAc,KARc,mBAMvB0C,EANuB,KAML0B,EANK,OAUsBtG,mBAAS,IAV/B,mBAUvBuG,EAVuB,KAUHC,EAVG,OAWWxG,mBAAS,IAXpB,mBAWvByG,EAXuB,KAWRC,EAXQ,KAa9BlD,oBAAS,sBAAC,8BAAArK,EAAA,sEACkB6M,EAAgBW,kBADlC,gBACAtO,EADA,EACAA,QACRyB,QAAQC,IAAI,UAAW1B,GACvBqO,EAAgBrO,GAHR,2CAIP,IAEH,IAUMuO,EAAoB,uCAAG,WAAO/M,GAAP,iBAAAV,EAAA,sEACD6M,EAAgBa,eAAehN,GAD9B,gBACnBxB,EADmB,EACnBA,QACR6N,GAAsB,GACtBQ,EAAgB,CAACrO,EAAQsB,UAAV,mBAAuB8M,KAHX,2CAAH,sDAMpBK,EAAoB,uCAAG,WAAOjN,GAAP,mBAAAV,EAAA,sEAED6M,EAAgBe,eAAhB,2BAAoClN,GAApC,IAA0C2L,WAAY3L,EAAKqK,OAF1D,gBAEnB7L,EAFmB,EAEnBA,QACRyB,QAAQC,IAAI,uBAAwB1B,GAEpCyB,QAAQC,IAAI,WAAYF,EAAKqK,KAC7BgC,GAAsB,GAChBc,EAAkBP,EAAchF,KAAI,SAACX,GAEzC,OAAIA,EAASoD,MAAQrK,EAAKqK,IACjB,eAAK7L,EAAQsB,UAEf,eAAKmH,MAEdhH,QAAQC,IAAI,kBAAmBiN,GAC/BN,EAAgB,YAAIM,IAfO,4CAAH,sDAkBpBC,EAAoB,uCAAG,iCAAA9N,EAAA,6DAASqM,EAAT,EAASA,WAAT,SACDQ,EAAgBkB,eAAe,CAAE1B,eADhC,gBACnBnN,EADmB,EACnBA,QACRyB,QAAQC,IAAI,CAAE1B,YACd+N,GAAoB,GAEpBM,EAAgB,YAAID,EAAc5F,QAAO,SAACC,GAAD,OAAc0E,IAAe1E,EAASoD,SALpD,2CAAH,sDAyBpBiD,EAA0B,SAAC,GAAuB,IAArB/O,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACvC,OAAQD,GACN,KAAKkK,qBAAmBC,OACtB8D,EAAkBlC,kBAAgB5B,QAClC2D,GAAsB,GACtBM,EAAsBnO,GACtB,MACF,KAAKiK,qBAAmBG,OACtB2D,GAAoB,GACpBE,EAAoB,CAClBzG,MAAc,+CACdqC,YAAc,mCAEd8C,OAAc3M,EAAQ6L,QAsB9B,OACE,gCAEE,cAAC,GAAD,CAAarK,KAAM4M,IAEnB,cAAC5H,EAAA,EAAD,CACER,QAAQ,YACRjD,MAAM,UACNuC,UAAWvB,EAAQqJ,OACnBvG,QAvGoB,WACxBmH,EAAkBlC,kBAAgBH,QAClCkC,GAAsB,GACtBM,EAAsB,KAgGpB,qBAUEC,EAAchF,KAAI,SAACX,GAAD,OAChB,cAAC,GAAD,CAGEA,SAAUA,EACVmB,kBAAmBkF,GAFdrG,EAASoD,QAMpB,cAACkD,GAAD,CACEjL,KAAM8J,EACNnD,eAAgBA,EAChBC,oBA/E4B,SAAC,GAAuB,IAArB3K,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACzC,OAAQD,GACN,KAAKyL,uBAAqBC,MACxBoC,GAAsB,GAEtB,MACF,KAAKrC,uBAAqBG,OACxB4C,EAAqBvO,GACrB,MACF,KAAKwL,uBAAqBtB,OACxBuE,EAAqBzO,KAsErB2K,aAAcuD,IAEhB,cAAC,GAAD,CACEpK,KAAMgK,EACNtB,kBA9C2B,SAAC,GAAuB,IAArBzM,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAExC,OADAyB,QAAQC,IAAI,UAAW1B,GACfD,GACN,KAAK0M,qBAAkBhB,MACrBsC,GAAoB,GACpB,MACF,KAAKtB,qBAAkBC,QACrBkC,EAAqB,CAAEzB,WAAYnN,MAwCnCuM,iBAAkBA,QC5KXyC,GATK,WAElB,OADAvN,QAAQC,IAAI,OAEV,mCACE,sDCOSuN,GAXqB,WAElC,OADAxN,QAAQC,IAAI,OAEV,8BACE,0ECKSwN,GATa,WAE1B,OADAzN,QAAQC,IAAI,QAEV,mCACE,sGCUAU,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,KAG1B2K,OAAQ,CACN1K,MAAS,OACTF,OAAS,UAEX6K,WAAY,CACVC,YAAahL,EAAMG,QAAQ,IAE7B8K,SAAU,CACR7K,MAAO,KAET8K,KAAM,CACJ9K,MAAO,KAET8E,MAAO,CACLiG,SAAU,GAEZ0B,UAAW,CACTzL,gBAAiB,eA+IN0L,GA3IS,WACtB,IAAMrL,EAAU3B,KADY,EAGNiN,cAAd5O,EAHoB,EAGpBA,KAAM6O,EAHc,EAGdA,IAHc,EAIA3H,oBAAS,GAJT,mBAIrB4H,EAJqB,KAIbC,EAJa,OAKI7H,mBAAS,MALb,mBAKrB8H,EALqB,KAKXC,EALW,KAMtB5L,EAAO6L,QAAQF,GAEfG,EAAe,SAACC,GAAD,OAAY,SAACC,KAC5BA,GAAwB,YAAfA,EAAM/P,MAAqC,QAAd+P,EAAMC,KAA+B,UAAdD,EAAMC,MAGvEP,EAAUK,KAONtE,EAAc,WAClBmE,EAAY,OAGd,OACE,qCACE,cAACM,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,CAASlK,QAAQ,QAAjB,UACE,cAACmK,EAAA,EAAD,CACEC,KAAK,QACL9K,UAAWvB,EAAQsJ,WACnBtK,MAAM,UACNsN,aAAW,OACXxJ,QAAS+I,GAAa,GALxB,SAOE,cAAC,IAAD,MAEF,cAACU,EAAA,EAAD,CAAYtK,QAAQ,KAAKjD,MAAM,UAAUuC,UAAWvB,EAAQyD,MAA5D,0BAIA,gCACE,cAAC2I,EAAA,EAAD,CACEE,aAAW,0BACXE,gBAAc,cACdC,gBAAc,OACd3J,QA9BO,SAACiJ,GAClBJ,EAAYI,EAAMW,gBA8BR1N,MAAM,UALR,SAOE,cAAC,IAAD,MAEF,cAAC2N,EAAA,EAAD,CACErL,GAAG,cACHoK,SAAUA,EACVkB,aAAc,CACZC,SAAa,MACbC,WAAa,SAEfC,aAAW,EACXC,gBAAiB,CACfH,SAAa,MACbC,WAAa,SAEf/M,KAAMA,EACND,QAAS0H,EAbX,SAgBE,cAACa,EAAA,EAAD,CAAUvF,QAAS0E,EAAnB,qCAKR,cAACyF,EAAA,EAAD,CACEC,OAAO,OACPnN,KAAMyL,EACN1L,QAAS+L,GAAa,GACtBsB,OAAQtB,GAAa,GAJvB,SAME,qBAAKtK,UAAWvB,EAAQwJ,SAAxB,SAEE,eAAC4D,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWC,IAAMpJ,GAAE,UAAKmH,EAAL,WAApC,UACE,cAACkC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,cAExB,eAACN,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWC,IAAMpJ,GAAE,UAAKmH,EAAL,SAApC,UACE,cAACkC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,cAExB,eAACN,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWC,IAAMpJ,GAAE,UAAKmH,EAAL,oBAApC,UACE,cAACkC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,uBAExB,eAACN,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWC,IAAMpJ,GAAE,UAAKmH,EAAL,WAApC,UACE,cAACkC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,sBAM9B,qBAAKpM,UAAWvB,EAAQoL,UAAxB,SACE,cAACwC,EAAA,EAAD,CAAWC,OAAK,EAAC1M,SAAS,KAA1B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2M,OAAK,EAACpR,KAAI,UAAKA,EAAL,SAAjB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,WAAX,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,oBAAX,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,WAAX,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,GAAD,iB,SC7ICqR,GAvBM,SAAC,GAIf,IAHLC,EAGI,EAHJA,gBACWC,EAEP,EAFJV,UACGW,EACC,gDAEJ,OADAxQ,QAAQC,IAAI,MAEV,cAAC,IAAD,2BACMuQ,GADN,IAEEX,UAAW,SAACY,GAAD,OACTH,EACK,cAACC,EAAD,eAAeE,IACf,cAAC,IAAD,CAAU/J,GAAG,eCWXgK,GAvBK,SAAC,GAId,IAHLJ,EAGI,EAHJA,gBACWC,EAEP,EAFJV,UACGW,EACC,gDAEJ,OADAxQ,QAAQC,IAAI,MAEV,cAAC,IAAD,2BACMuQ,GADN,IAEEX,UAAW,SAACY,GAAD,OACRH,EAEI,cAAC,IAAD,CAAU5J,GAAG,eADb,cAAC6J,EAAD,eAAeE,SC4BbE,GA/BG,WAChB3Q,QAAQC,IAAI,UADU,IAEdE,EAASqC,qBAAW3E,GAApBsC,KAER,OADAH,QAAQC,IAAI,OAAQE,GAElB,mCACE,cAAC,IAAD,UACE,8BACE,eAAC,IAAD,WACE,cAAC,GAAD,CACEnB,KAAK,QACLsR,kBAAmBnQ,EAAKI,MACxBsP,UAAW7J,IAEb,cAAC,GAAD,CACEhH,KAAK,aACLsR,kBAAmBnQ,EAAKI,MACxBsP,UAAWlC,KAEb,cAAC,GAAD,CACE3O,KAAK,IACLsR,kBAAmBnQ,EAAKI,MACxBsP,UAAWpJ,cC5BnBmK,GAAO,kBAAMjR,KAAKyL,MAAM3K,aAAa4K,QAAQ,UAAY,CAAE7M,QAAQ,IAY1DqS,OAVf,WAAgB,IAAD,EACYC,qBAAW3S,EAAa,GAAIyS,IADxC,mBACNzQ,EADM,KACAoC,EADA,KAGb,OACE,cAAC,EAAYwO,SAAb,CAAsBjM,MAAO,CAAE3E,OAAMoC,YAArC,SACE,cAAC,GAAD,OCCSyO,GAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAAStN,OACP,cAAC,GAAD,IACAuN,SAASC,eAAe,SAM1BX,M,iBCfAY,EAAQ1K,eAAiB,CACvBC,QAAU,UACVM,OAAU,UAGZmK,EAAQvH,gBAAkB,CACxBH,OAAS,2BACTzB,OAAS,4BAGXmJ,EAAQ7H,qBAAuB,CAC7BG,OAAS,gCACTzB,OAAS,gCACTuB,MAAS,gCAGX4H,EAAQpJ,mBAAqB,CAC3BC,OAAS,8BACTE,OAAS,gC,iBClBXiJ,EAAQ5G,kBAAoB,CAC1BhB,MAAU,6BACViB,QAAU,iC,iBCFZ,IAAM4G,EAAkB,SAACC,GAAD,OAASA,GAAK,EAAN,WAAeA,GAAMA,GAErDF,EAAQhI,gBAAkB,SAACmI,GACzB,IAAMC,EAAkB,IAAIC,KAAKF,GAC3BG,EAAOF,EAAgBG,cACvBC,EAAQP,EAAgBG,EAAgBK,WAAa,GACrDC,EAAMT,EAAgBG,EAAgBO,WAC5C,MAAM,GAAN,OAAUL,EAAV,YAAkBE,EAAlB,YAA2BE,IAG7BV,EAAQtJ,WAAa,SAACyJ,GAAsB,IAAhBS,EAAe,uDAAR,IAC3BR,EAAkB,IAAIC,KAAKF,GAC3BG,EAAOF,EAAgBG,cACvBC,EAAQP,EAAgBG,EAAgBK,WAAa,GACrDC,EAAMT,EAAgBG,EAAgBO,WAC5C,MAAM,GAAN,OAAUD,GAAV,OAAgBE,GAAhB,OAAuBJ,GAAvB,OAA+BI,GAA/B,OAAsCN,K","file":"static/js/main.03f31e60.chunk.js","sourcesContent":["const { createContext } = require('react');\n\nconst AuthContext = createContext();\n\nexport default AuthContext;\n","const authTypes = {\n  login  : '[auth] login',\n  logout : '[auth] signout',\n};\n\nexport default authTypes;\n","import authTypes from '../types/auth.types';\n\n// const state = {\n//   email: 'cristian@dasdsa',\n//   profile: {\n//     lastNames: \"sotomayor\",\n//     names: \"cristian\",\n//     picture: \"\"\n//   },\n//   logged: true\n//   token: 'dasdasdsa'\n//   expiresIn: '1d'\n// };\n\nconst authReducer = (state = {}, action) => {\n  switch (action.type) {\n    case authTypes.login:\n      return {\n        ...action.payload,\n        logged: true,\n      };\n    case authTypes.logout:\n      return {\n        logged: false,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import devConfig from './dev.stage';\nimport prodConfig from './prod.stage';\n\nconst config = {\n  dev        : process.env.NODE_ENV !== 'production',\n  backendUrl : process.env.NODE_ENV !== 'production' ? devConfig.apiUrl : prodConfig.apiUrl,\n};\n\nexport default config;\n","const prodConfig = {\n  apiUrl: 'https://mi-chanchito-back.herokuapp.com/',\n};\n\nexport default prodConfig;\n","import config from '../config';\n\nclass AuthService {\n  constructor() {\n    this.path = 'auth';\n  }\n\n  loginEmail({\n    email, password,\n  }) {\n    return new Promise(async (resolve) => {\n      try {\n        const bodyObject = {\n          email, password,\n        };\n        const response = await fetch(`${config.backendUrl}/${this.path}/login-email`, {\n          method  : 'POST',\n          headers : {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(bodyObject),\n        });\n        const data = await response.json();\n        console.log('data ', data);\n        return resolve({ success: true, payload: data.user });\n      } catch (error) {\n        return resolve({ error });\n      }\n    });\n  }\n\n  signupEmail({\n    email, password,\n  }) {\n    return new Promise(async (resolve) => {\n      try {\n        const bodyObject = {\n          email, password,\n        };\n        const response = await fetch(`${config.backendUrl}/${this.path}/signup-email`, {\n          method  : 'POST',\n          headers : {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(bodyObject),\n        });\n        const data = await response.json();\n        console.log('data ', data);\n        return resolve({ success: true, payload: [] });\n      } catch (error) {\n        return resolve({ error });\n      }\n    });\n  }\n\n  setLocalStorage({\n    email, profile, token, expiresIn,\n  }) {\n    const userObj = {\n      email, profile, token, expiresIn,\n    };\n    console.log('userObj', userObj);\n    localStorage.setItem('user', JSON.stringify({ ...userObj }));\n  }\n}\n\nexport default AuthService;\n","import {\n  Button, Dialog, DialogContent, DialogTitle, makeStyles, TextField,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router';\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm, Controller } from 'react-hook-form';\nimport AuthService from '../services/auth.service';\nimport AuthContext from '../contexts/auth.context';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin : theme.spacing(1),\n      width  : '300px',\n    },\n    display       : 'flex',\n    flexDirection : 'column',\n    alignItems    : 'center',\n  },\n  loginTitle: {\n    color      : '#2E598C',\n    textAlign  : 'center',\n    fontWeight : 'bold',\n  },\n  loginContent: {\n    minWidth: '400px',\n  },\n  loginButtonContainer: {\n    display       : 'flex',\n    flexDirection : 'column',\n    alignItems    : 'center',\n    '& > *'       : {\n      marginBottom: '10px',\n    },\n    '& > Button': {\n      borderRadius : '5px',\n      padding      : '10px 15px',\n      width        : '300px',\n      fontWeight   : '500',\n      boxShadow    : 'rgba(0,0,0,0.2) 1px 1px 5px 0',\n    },\n  },\n  blueButton: {\n    backgroundColor : '#2E598C',\n    color           : 'white',\n    '&:hover'       : {\n      backgroundColor: '#2E598C',\n    },\n  },\n  whiteButton: {\n    backgroundColor : 'white',\n    color           : '#686868',\n    '&:hover'       : {\n      backgroundColor: '#EBE9E9',\n    },\n  },\n}));\n\nconst LoginModal = ({ onClose, open }) => {\n  const classes = useStyles();\n\n  const { dispatch } = useContext(AuthContext);\n  const authService = new AuthService();\n  const history = useHistory();\n\n  const {\n    control, handleSubmit, formState: { errors },\n  } = useForm();\n\n  const handleClose = () => {\n    onClose({});\n  };\n\n  const handle = () => {\n  };\n\n  const handleLogin = async ({ email, password }) => {\n    if (!email) return;\n    if (!password) return;\n    const { error, payload: loginPayload } = await authService.loginEmail({ email, password });\n    if (error) return;\n    console.log('response', loginPayload);\n    console.log('dispatch', dispatch);\n    authService.setLocalStorage(loginPayload);\n    history.push('/dashboard/home');\n  };\n\n  const onSubmit = (data) => {\n    console.log('hola', data);\n    handleLogin(data);\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"simple-dialog-title\"\n      open={open}\n      maxWidth=\"xl\"\n      classes={{ paper: classes.loginContent }}\n    >\n      <DialogTitle id=\"simple-dialog-title\" className={classes.loginTitle}>\n        Iniciar Sesión\n      </DialogTitle>\n      <DialogContent>\n        <form\n          className={classes.root}\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <Controller\n            name=\"email\"\n            render={({ field }) => (\n              <TextField\n                {...field}\n                id=\"email\"\n                name=\"email\"\n                label=\"Correo electronico\"\n                variant=\"outlined\"\n                helperText={errors.email ? errors.email.message : null}\n                error={errors.email}\n              />\n            )}\n            control={control}\n            defaultValue=\"\"\n            rules={{\n              required : 'Required',\n              pattern  : {\n                value   : /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                message : 'invalid email address',\n              },\n            }}\n          />\n          <Controller\n            name=\"password\"\n            render={({ field }) => (\n              <TextField\n                {...field}\n                id=\"password\"\n                name=\"password\"\n                label=\"Contraseña\"\n                variant=\"outlined\"\n                helperText={errors.password ? errors.password.message : null}\n                error={errors.password}\n              />\n            )}\n            control={control}\n            defaultValue=\"\"\n            rules={{\n              required: 'Required',\n            }}\n          />\n          <div className={classes.loginButtonContainer}>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.blueButton}\n              type=\"submit\"\n              disabled={Object.keys(errors).length > 0}\n            >\n              Iniciar Sesión\n            </Button>\n\n            <span>ó</span>\n\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={handle}\n              className={classes.whiteButton}\n            >\n              Iniciar Sesión con Google\n            </Button>\n\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={handle}\n              className={classes.whiteButton}\n            >\n              Iniciar Sesión con Facebook\n            </Button>\n          </div>\n        </form>\n\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nLoginModal.propTypes = {\n  onClose : PropTypes.func.isRequired,\n  open    : PropTypes.bool.isRequired,\n};\n\nexport default LoginModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, Dialog, DialogContent, DialogTitle, makeStyles, TextField,\n} from '@material-ui/core';\nimport { Controller, useForm } from 'react-hook-form';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin : theme.spacing(1),\n      width  : '300px',\n    },\n    display       : 'flex',\n    flexDirection : 'column',\n    alignItems    : 'center',\n  },\n  registerButtonContainer: {\n    display       : 'flex',\n    flexDirection : 'column',\n    alignItems    : 'center',\n    '& > *'       : {\n      marginBottom: '10px',\n    },\n    '& > Button': {\n      borderRadius : '5px',\n      padding      : '10px 15px',\n      width        : '300px',\n      fontWeight   : '500',\n      boxShadow    : 'rgba(0,0,0,0.2) 1px 1px 5px 0',\n    },\n  },\n}));\n\nconst RegisterModal = ({ onClose, open }) => {\n  const classes = useStyles();\n  const {\n    control, handleSubmit, errors: fieldsErrors,\n  } = useForm();\n\n  const handleClose = () => {\n    onClose({ hola: '12' });\n  };\n\n  // const handleRegister = () => {\n  //   // setOpenLogin(true);\n  // };\n\n  const handle = () => {\n\n  };\n\n  const onSubmit = (data) => {\n    console.log('hola', data);\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n\n      <DialogTitle id=\"simple-dialog-title\">\n        Registrarse\n      </DialogTitle>\n\n      <DialogContent>\n        <form\n          className={classes.root}\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n\n          <Controller\n            name=\"names\"\n            render={({ field }) => (\n              <TextField\n                {...field}\n                id=\"names\"\n                name=\"names\"\n                label=\"Nombre completo\"\n                variant=\"outlined\"\n                helperText={fieldsErrors?.names ? fieldsErrors?.names.message : null}\n                error={fieldsErrors?.names}\n              />\n            )}\n            control={control}\n            defaultValue=\"\"\n            rules={{\n              required: 'Required',\n            }}\n          />\n          <Controller\n            name=\"email\"\n            render={({ field }) => (\n              <TextField\n                {...field}\n                id=\"email\"\n                name=\"email\"\n                label=\"Email\"\n                variant=\"outlined\"\n                helperText={fieldsErrors?.email ? fieldsErrors?.email.message : null}\n                error={fieldsErrors?.email}\n              />\n            )}\n            control={control}\n            defaultValue=\"\"\n            rules={{\n              required : 'Required',\n              pattern  : {\n                value   : /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                message : 'invalid email address',\n              },\n            }}\n          />\n          <Controller\n            name=\"password\"\n            render={({ field }) => (\n              <TextField\n                {...field}\n                id=\"password\"\n                name=\"password\"\n                label=\"Contraseña\"\n                variant=\"outlined\"\n                helperText={fieldsErrors?.password ? fieldsErrors?.password.message : null}\n                error={fieldsErrors?.password}\n              />\n            )}\n            control={control}\n            defaultValue=\"\"\n            rules={{\n              required: 'Required',\n            }}\n          />\n          <Controller\n            name=\"password2\"\n            render={({ field }) => (\n              <TextField\n                {...field}\n                id=\"password2\"\n                name=\"password2\"\n                label=\"Repetir contraseña\"\n                variant=\"outlined\"\n                helperText={fieldsErrors?.password2 ? fieldsErrors?.password2.message : null}\n                error={fieldsErrors?.password2}\n              />\n            )}\n            control={control}\n            defaultValue=\"\"\n            rules={{\n              required: 'Required',\n            }}\n          />\n\n          <div className={classes.registerButtonContainer}>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              type=\"submit\"\n            >\n              Registrate\n            </Button>\n\n            <span>o</span>\n\n            <Button variant=\"contained\" color=\"secondary\" onClick={handle}>\n              Google\n            </Button>\n\n            <Button variant=\"contained\" color=\"secondary\" onClick={handle}>\n              Facebook\n            </Button>\n\n          </div>\n\n        </form>\n      </DialogContent>\n\n    </Dialog>\n  );\n};\n\nRegisterModal.propTypes = {\n  onClose : PropTypes.func.isRequired,\n  open    : PropTypes.bool.isRequired,\n};\n\nexport default RegisterModal;\n","import { Button, makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport LoginModal from '../components/LoginModal';\nimport RegisterModal from '../components/RegisterModal';\n\nconst useStyles = makeStyles(() => ({\n  buttonContainer: {\n    marginTop     : '60px',\n    display       : 'flex',\n    flexDirection : 'column',\n    alignItems    : 'center',\n    '& > Button'  : {\n      borderRadius : '5px',\n      padding      : '10px 15px',\n      width        : '300px',\n      fontWeight   : '500',\n      boxShadow    : 'rgba(0,0,0,0.2) 1px 1px 5px 0',\n    },\n    '& > Button:first-child': {\n      marginBottom: '10px',\n    },\n  },\n  loginButton: {\n    backgroundColor : '#E4445A',\n    color           : 'white',\n    '&:hover'       : {\n      backgroundColor: '#E4445A',\n    },\n  },\n  registerButton: {\n    backgroundColor : '#37699C',\n    color           : 'white',\n    '&:hover'       : {\n      backgroundColor: '#37699C',\n    },\n  },\n  title: {\n    textAlign: 'center',\n  },\n}));\n\nconst AuthPage = () => {\n  const classes = useStyles();\n  const [openLogin, setOpenLogin] = React.useState(false);\n  const [openRegister, setOpenRegister] = React.useState(false);\n\n  console.log('something', { openLogin, openRegister });\n\n  const handleLogin = () => {\n    setOpenLogin(true);\n  };\n  const handleRegister = () => {\n    setOpenRegister(true);\n  };\n\n  const handleCloseLogin = (hola) => {\n    console.log('hola', hola);\n    setOpenLogin(false);\n  };\n\n  const handleCloseRegister = (hola) => {\n    console.log('hola', hola);\n    setOpenRegister(false);\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <div\n        className=\"part1\"\n        style={{ backgroundImage: `url('${process.env.PUBLIC_URL}/images/portada.png')` }}\n      />\n      <div className=\"part2\">\n        <div className=\"part2-content\">\n          <h1 className={classes.title}>Administra tu dinero de forma efectiva</h1>\n          <div className={classes.buttonContainer}>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleLogin} className={classes.loginButton}>\n              Iniciar Sesión\n            </Button>\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleRegister} className={classes.registerButton}>\n              Registrarse\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      <LoginModal open={openLogin} onClose={handleCloseLogin} />\n      <RegisterModal open={openRegister} onClose={handleCloseRegister} />\n      {/*\n      */}\n    </div>\n  );\n};\n\nexport default AuthPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst HomePage = () => {\n  console.log('hey you');\n  return (\n    <div>\n      <h1>Hola estamos en el home</h1>\n      <h2>Bienvenido a mi chanchito</h2>\n      <Link to=\"/auth\">Auth</Link>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { cashFlowLabels } from '../constant/transfer';\n\nconst BalanceCard = ({\n  data,\n}) => {\n  const formatData = (transfers) => {\n    const ingresos = transfers\n      .filter((transfer) => transfer.cashFlow === cashFlowLabels.ingreso)\n      .reduce((acc, curr) => acc + curr.amount, 0);\n    const egresos = transfers\n      .filter((transfer) => transfer.cashFlow === cashFlowLabels.egreso)\n      .reduce((acc, curr) => acc + curr.amount, 0);\n    return [\n      {\n        label  : 'Ingresos',\n        amount : ingresos,\n      },\n      {\n        label  : 'Egresos',\n        amount : egresos,\n      },\n      {\n        label  : 'Balance',\n        amount : ingresos - egresos,\n      },\n    ];\n  };\n\n  const balanceCardData = formatData(data);\n\n  console.log('cambio');\n  return (\n    <div className=\"card balance-card\">\n      {\n        balanceCardData.map((item) => (\n          <div className=\"balance-card__item\" key={item.label}>\n            <div>{item.label}</div>\n            <span className=\"spacer\" />\n            <div>{`S/. ${item.amount}`}</div>\n          </div>\n        ))\n      }\n      {/* <div className=\"balance-card__item\">\n        <div>Ingresos</div>\n        <span className=\"spacer\" />\n        <div>S/. 1000</div>\n      </div>\n      <div className=\"balance-card__item\">\n        <div>Egresos</div>\n        <span className=\"spacer\" />\n        <div>S/. 900</div>\n      </div>\n      <div className=\"balance-card__item\">\n        <div>Balance</div>\n        <span className=\"spacer\" />\n        <div>S/. 100</div>\n      </div> */}\n    </div>\n  );\n};\n\nBalanceCard.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    cashFlow : PropTypes.string.isRequired,\n    amount   : PropTypes.number.isRequired,\n  })).isRequired,\n};\n\nexport default BalanceCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Divider, makeStyles } from '@material-ui/core';\nimport { cashFlowLabels, eventsTransferCard } from '../../constant/transfer';\n// import useHover from '../../hooks/hoover.hook';\nimport './TransferCard.css';\nimport { formatDate } from '../../lib/date';\n\nconst useStyles = makeStyles(() => ({\n  header: {\n    display : 'flex',\n    margin  : '20px 0',\n  },\n  actionsBtn: {\n    display    : 'flex',\n    alignItems : 'center',\n    transition : 'transform 200ms ease',\n  },\n}));\n\nconst TransferCard = ({\n  transfer,\n  transferCardEvent,\n}) => {\n  const classes = useStyles();\n  // const [hovered, setHovered] = useState(false);\n\n  // const {\n  //   hovered, onMouseEnter, onFocus, onMouseLeave, onBlur,\n  // } = useHover();\n  // console.log('hovered', hovered);\n\n  let labelCard;\n  let amountCard;\n  switch (transfer.cashFlow) {\n    case cashFlowLabels.ingreso:\n      labelCard = <div className={`transfer-card__label ${cashFlowLabels.ingreso}`}>Ingreso</div>;\n      amountCard = <div>{`+ S/. ${transfer.amount}`}</div>;\n      break;\n    case cashFlowLabels.egreso:\n      labelCard = <div className={`transfer-card__label ${cashFlowLabels.egreso}`}>Egreso</div>;\n      amountCard = <div>{`- S/. ${transfer.amount}`}</div>;\n      break;\n\n    default:\n      break;\n  }\n\n  const emitUpdate = () => {\n    transferCardEvent({\n      type    : eventsTransferCard.update,\n      payload : transfer,\n    });\n  };\n\n  const emitDelete = () => {\n    transferCardEvent({\n      type    : eventsTransferCard.delete,\n      payload : transfer,\n    });\n  };\n\n  return (\n\n    // <div\n    //   className=\"card transfer-card\"\n    //   onMouseEnter={onMouseEnter}\n    //   onFocus={onFocus}\n    //   onMouseLeave={onMouseLeave}\n    //   onBlur={onBlur}\n    // >\n    <div\n      className=\"card transfer-card\"\n    >\n      <div className={classes.header}>\n        <div>\n          {transfer.description}\n        </div>\n        <span className=\"spacer\" />\n        {\n          amountCard\n        }\n        {\n          labelCard\n        }\n      </div>\n      <Divider />\n      <div className={classes.actionsBtn}>\n        <div>\n          { formatDate(transfer.dateTransfer) }\n        </div>\n        <span className=\"spacer\" />\n        <Button\n          onClick={emitUpdate}\n          color=\"primary\"\n          autoFocus\n        >\n          Actualizar\n        </Button>\n        <Button\n          onClick={emitDelete}\n          color=\"primary\"\n          autoFocus\n        >\n          Eliminar\n        </Button>\n      </div>\n    </div>\n\n  );\n};\nTransferCard.propTypes = {\n  transfer: PropTypes.shape({\n    description  : PropTypes.string.isRequired,\n    details      : PropTypes.string.isRequired,\n    amount       : PropTypes.number.isRequired,\n    dateTransfer : PropTypes.string.isRequired,\n    cashFlow     : PropTypes.string.isRequired,\n    _id          : PropTypes.string,\n  }).isRequired,\n  transferCardEvent: PropTypes.func.isRequired,\n};\n\nexport default TransferCard;\n","import {\n  Button, Dialog, DialogActions, DialogContent,\n  DialogTitle, makeStyles, MenuItem, Select, TextField, useMediaQuery, useTheme,\n} from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Controller, useForm } from 'react-hook-form';\nimport { actionsTransfer, eventsTransferDialog } from '../constant/transfer';\nimport { formatInputDate } from '../lib/date';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  createBtn : {},\n  updateBtn : {},\n  form      : {\n    '& > *': {\n      margin   : theme.spacing(1),\n      minWidth : '300px',\n    },\n    display       : 'flex',\n    flexDirection : 'column',\n    alignItems    : 'center',\n  },\n}));\n\nconst TransferDialog = ({\n  open,\n  actionTransfer,\n  transferDialogEvent,\n  transferData,\n}) => {\n  console.log('transferData', transferData);\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const {\n    control, formState: { errors }, getValues, setValue,\n  } = useForm();\n\n  useEffect(() => {\n    console.log('initiiii', transferData);\n    if (open) {\n      console.log('abriendo');\n      setValue('description', transferData.description);\n      setValue('details', transferData.details);\n      setValue('amount', transferData.amount);\n      setValue('dateTransfer', formatInputDate(transferData.dateTransfer));\n      setValue('cashFlow', transferData.cashFlow);\n    }\n    // return () => {\n    //   cleanup\n    // };\n  }, [open]);\n\n  const handleClose = () => {\n    // setOpen(false);\n    transferDialogEvent({\n      type    : eventsTransferDialog.close,\n      payload : {},\n    });\n  };\n\n  const handleCreate = (data) => {\n    transferDialogEvent({\n      type    : eventsTransferDialog.create,\n      payload : data,\n    });\n  };\n\n  const handleUpdate = (data) => {\n    transferDialogEvent({\n      type    : eventsTransferDialog.update,\n      // eslint-disable-next-line no-underscore-dangle\n      payload : { ...data, _id: transferData._id },\n    });\n  };\n\n  const handleSubmit = async (data) => {\n    console.log('data', data);\n    switch (actionTransfer) {\n      case actionsTransfer.create:\n        handleCreate(data);\n        break;\n\n      case actionsTransfer.update:\n        handleUpdate(data);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  let actionSelected;\n  switch (actionTransfer) {\n    case actionsTransfer.create:\n      actionSelected = (\n        <>\n          <Button\n            onClick={() => handleSubmit(getValues())}\n            color=\"primary\"\n            autoFocus\n            className={classes.createBtn}\n          >\n            Crear\n          </Button>\n        </>\n      );\n      break;\n\n    case actionsTransfer.update:\n      actionSelected = (\n        <>\n          <Button\n            onClick={() => handleSubmit(getValues())}\n            color=\"primary\"\n            autoFocus\n            className={classes.updateBtn}\n          >\n            Actualizar\n          </Button>\n        </>\n      );\n      break;\n\n    default:\n      break;\n  }\n\n  return (\n    <>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          Agregar una nueva transferencia\n        </DialogTitle>\n        <DialogContent>\n          <form\n            className={classes.form}\n            noValidate\n            autoComplete=\"off\"\n          >\n            <Controller\n              name=\"description\"\n              render={({ field }) => (\n                <TextField\n                  {...field}\n                  id=\"description\"\n                  name=\"description\"\n                  label=\"Descripcion\"\n                  variant=\"outlined\"\n                  helperText={errors.description ? errors.description.message : null}\n                  error={errors.description}\n                />\n              )}\n              control={control}\n              defaultValue=\"\"\n              rules={{\n                required: 'Required',\n              }}\n            />\n\n            <Controller\n              name=\"details\"\n              render={({ field }) => (\n                <TextField\n                  {...field}\n                  id=\"details\"\n                  name=\"details\"\n                  label=\"Detalles\"\n                  variant=\"outlined\"\n                  multiline\n                  rows={4}\n                  helperText={errors.details ? errors.details.message : null}\n                  error={errors.details}\n                />\n              )}\n              control={control}\n              defaultValue=\"\"\n              rules={{\n                required: 'Required',\n              }}\n            />\n\n            <Controller\n              name=\"amount\"\n              render={({ field }) => (\n                <TextField\n                  {...field}\n                  id=\"amount\"\n                  type=\"number\"\n                  name=\"amount\"\n                  label=\"Monto\"\n                  variant=\"outlined\"\n                  helperText={errors.amount ? errors.amount.message : null}\n                  error={errors.amount}\n                />\n              )}\n              control={control}\n              defaultValue=\"\"\n              rules={{\n                required: 'Required',\n              }}\n            />\n\n            <Controller\n              name=\"dateTransfer\"\n              render={({ field }) => (\n                <TextField\n                  {...field}\n                  id=\"dateTransfer\"\n                  name=\"dateTransfer\"\n                  type=\"date\"\n                  label=\"Fecha transferencia\"\n                  variant=\"outlined\"\n                  helperText={errors.dateTransfer ? errors.dateTransfer.message : null}\n                  error={errors.dateTransfer}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n              )}\n              control={control}\n              defaultValue=\"\"\n              rules={{\n                required: 'Required',\n              }}\n            />\n\n            <Controller\n              name=\"cashFlow\"\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  id=\"cashFlow\"\n                  name=\"cashFlow\"\n                  variant=\"outlined\"\n                >\n                  <MenuItem value=\"ingreso\">Ingreso</MenuItem>\n                  <MenuItem value=\"egreso\">Egreso</MenuItem>\n                </Select>\n              )}\n              control={control}\n              defaultValue=\"\"\n              rules={{\n                required: 'Required',\n              }}\n            />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Cancelar\n          </Button>\n          {\n            actionSelected\n          }\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nTransferDialog.propTypes = {\n  open                : PropTypes.bool.isRequired,\n  actionTransfer      : PropTypes.string.isRequired,\n  transferDialogEvent : PropTypes.func.isRequired,\n  transferData        : PropTypes.shape({\n    description  : PropTypes.string,\n    details      : PropTypes.string,\n    amount       : PropTypes.number,\n    dateTransfer : PropTypes.string,\n    cashFlow     : PropTypes.string,\n    userId       : PropTypes.string,\n    _id          : PropTypes.string,\n  }).isRequired,\n};\n\nexport default TransferDialog;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, Dialog, DialogActions, DialogContent,\n  DialogTitle, makeStyles, useMediaQuery, useTheme,\n} from '@material-ui/core';\nimport { typesConfirmModal } from './ConfirmModal.types';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  description: {},\n}));\n\nconst ConfirmModal = ({\n  open,\n  confirmModalData,\n  confirmModalEvent,\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const handleClose = () => {\n    confirmModalEvent({\n      type    : typesConfirmModal.close,\n      payload : {},\n    });\n  };\n\n  const handleConfirm = () => {\n    confirmModalEvent({\n      type    : typesConfirmModal.confirm,\n      payload : confirmModalData.idData,\n    });\n  };\n\n  console.log('opened', { confirmModalData, open, confirmModalEvent });\n  return (\n    <>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          { confirmModalData.title }\n        </DialogTitle>\n\n        <DialogContent>\n          <span className={classes.description}>\n            { confirmModalData.description }\n          </span>\n        </DialogContent>\n\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Cancelar\n          </Button>\n          <Button autoFocus onClick={handleConfirm} color=\"primary\">\n            Confirmar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nConfirmModal.propTypes = {\n  open              : PropTypes.bool.isRequired,\n  confirmModalEvent : PropTypes.func.isRequired,\n  confirmModalData  : PropTypes.shape({\n    title       : PropTypes.string.isRequired,\n    description : PropTypes.string.isRequired,\n    idData      : PropTypes.string,\n  }).isRequired,\n};\n\nexport default ConfirmModal;\n","import config from '../config';\n\nclass TransferService {\n  constructor() {\n    this.path = 'transfer';\n  }\n\n  getAllTransfers() {\n    return new Promise(async (resolve) => {\n      try {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (!user) throw new Error('No hay un usuario');\n\n        const { token } = user;\n\n        const response = await fetch(`${config.backendUrl}/${this.path}/all`, {\n          method  : 'GET',\n          headers : {\n            Authorization: token,\n          },\n        });\n        const { response: apiResponse } = await response.json();\n        console.log('data ', apiResponse);\n        return resolve({ success: true, payload: apiResponse });\n      } catch (error) {\n        return resolve({ error });\n      }\n    });\n  }\n\n  createTransfer({\n    details,\n    description,\n    amount,\n    dateTransfer,\n    cashFlow,\n  }) {\n    return new Promise(async (resolve) => {\n      try {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (!user) throw new Error('No hay un usuario');\n        const { token } = user;\n\n        const postObj = {\n          details,\n          description,\n          amount,\n          dateTransfer,\n          cashFlow,\n        };\n\n        const response = await fetch(`${config.backendUrl}/${this.path}/create`, {\n          method  : 'POST',\n          headers : {\n            'Content-Type' : 'application/json',\n            Authorization  : token,\n          },\n          body: JSON.stringify(postObj),\n        });\n        const data = await response.json();\n        console.log('data ', data);\n        return resolve({ success: true, payload: data });\n      } catch (error) {\n        return resolve({ error });\n      }\n    });\n  }\n\n  updateTransfer({\n    details,\n    description,\n    amount,\n    dateTransfer,\n    cashFlow,\n    idTransfer,\n  }) {\n    return new Promise(async (resolve) => {\n      try {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (!user) throw new Error('No hay un usuario');\n        const { token } = user;\n\n        console.log('idTransfer', idTransfer);\n        const postObj = {\n          details,\n          description,\n          amount,\n          dateTransfer,\n          cashFlow,\n          _id: idTransfer,\n        };\n\n        const response = await fetch(`${config.backendUrl}/${this.path}/update`, {\n          method  : 'POST',\n          headers : {\n            'Content-Type' : 'application/json',\n            Authorization  : token,\n          },\n          body: JSON.stringify(postObj),\n        });\n        const data = await response.json();\n        console.log('data ', data);\n        return resolve({ success: true, payload: data });\n      } catch (error) {\n        return resolve({ error });\n      }\n    });\n  }\n\n  deleteTransfer({\n    idTransfer,\n  }) {\n    return new Promise(async (resolve) => {\n      try {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (!user) throw new Error('No hay un usuario');\n        const { token } = user;\n\n        const postObj = { idTransfer };\n\n        const response = await fetch(`${config.backendUrl}/${this.path}/delete`, {\n          method  : 'POST',\n          headers : {\n            'Content-Type' : 'application/json',\n            Authorization  : token,\n          },\n          body: JSON.stringify(postObj),\n        });\n        const data = await response.json();\n        console.log('data ', data);\n        return resolve({ success: true, payload: data });\n      } catch (error) {\n        return resolve({ error });\n      }\n    });\n  }\n}\n\nexport default TransferService;\n","import {\n  Button, makeStyles,\n} from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport BalanceCard from '../components/BalanceCard';\nimport TransferCard from '../components/TransferCard/TransferCard';\nimport TransferModal from '../components/TransferModal';\nimport ConfirmModal from '../shared/ConfirmModal/ConfirmModal';\nimport { actionsTransfer, eventsTransferCard, eventsTransferDialog } from '../constant/transfer';\nimport '../App.css';\nimport TransferService from '../services/transfer.service';\nimport { typesConfirmModal } from '../shared/ConfirmModal/ConfirmModal.types';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  addBtn: {\n    width  : '100%',\n    margin : '20px 0',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  fullList: {\n    width: '100vw',\n  },\n  list: {\n    width: 250,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst DashboardHomePage = () => {\n  const transferService = new TransferService();\n  const classes = useStyles();\n  const [openTransferDialog, setOpenTransferDialog] = useState(false);\n  const [openConfirmModal, setOpenConfirmModal] = useState(false);\n  const [actionTransfer, setActionTransfer] = useState(actionsTransfer.create);\n  const [confirmModalData, setConfirmModalData] = useState({\n    title       : '',\n    description : '',\n  });\n  const [transferDataDialog, setTransferDataDialog] = useState({});\n  const [dataTransfers, setDataTransfer] = useState([]);\n\n  useEffect(async () => {\n    const { payload } = await transferService.getAllTransfers();\n    console.log('payload', payload);\n    setDataTransfer(payload);\n  }, []);\n\n  const handleAddTransfer = () => {\n    setActionTransfer(actionsTransfer.create);\n    setOpenTransferDialog(true);\n    setTransferDataDialog({});\n  };\n\n  /**\n   * Aqui vamos a hacer las acciones del CRUD en la vista\n  */\n\n  const handleCreateTransfer = async (data) => {\n    const { payload } = await transferService.createTransfer(data);\n    setOpenTransferDialog(false);\n    setDataTransfer([payload.response, ...dataTransfers]);\n  };\n\n  const handleUpdateTransfer = async (data) => {\n    // eslint-disable-next-line no-underscore-dangle\n    const { payload } = await transferService.updateTransfer({ ...data, idTransfer: data._id });\n    console.log('que me da de payload', payload);\n    // eslint-disable-next-line no-underscore-dangle\n    console.log('data._id', data._id);\n    setOpenTransferDialog(false);\n    const newDataTransfer = dataTransfers.map((transfer) => {\n      // eslint-disable-next-line no-underscore-dangle\n      if (transfer._id === data._id) {\n        return { ...payload.response };\n      }\n      return { ...transfer };\n    });\n    console.log('newDataTransfer', newDataTransfer);\n    setDataTransfer([...newDataTransfer]);\n  };\n\n  const handleDeleteTransfer = async ({ idTransfer }) => {\n    const { payload } = await transferService.deleteTransfer({ idTransfer });\n    console.log({ payload });\n    setOpenConfirmModal(false);\n    // eslint-disable-next-line no-underscore-dangle\n    setDataTransfer([...dataTransfers.filter((transfer) => idTransfer !== transfer._id)]);\n  };\n\n  const handleTransferDialogEvent = ({ type, payload }) => {\n    switch (type) {\n      case eventsTransferDialog.close:\n        setOpenTransferDialog(false);\n        // openTransferDialog, setOpenTransferDialog\n        break;\n      case eventsTransferDialog.create:\n        handleCreateTransfer(payload);\n        break;\n      case eventsTransferDialog.update:\n        handleUpdateTransfer(payload);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleTransferCardEvent = ({ type, payload }) => {\n    switch (type) {\n      case eventsTransferCard.update:\n        setActionTransfer(actionsTransfer.update);\n        setOpenTransferDialog(true);\n        setTransferDataDialog(payload);\n        break;\n      case eventsTransferCard.delete:\n        setOpenConfirmModal(true);\n        setConfirmModalData({\n          title       : 'Estas seguro de eliminar esta transferencia?',\n          description : 'No vas a poder recuperarla luego',\n          // eslint-disable-next-line no-underscore-dangle\n          idData      : payload._id,\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleConfirmModalEvents = ({ type, payload }) => {\n    console.log('payload', payload);\n    switch (type) {\n      case typesConfirmModal.close:\n        setOpenConfirmModal(false);\n        break;\n      case typesConfirmModal.confirm:\n        handleDeleteTransfer({ idTransfer: payload });\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div>\n\n      <BalanceCard data={dataTransfers} />\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.addBtn}\n        onClick={handleAddTransfer}\n      >\n        Agregar\n      </Button>\n      {/* cards */}\n      {\n        dataTransfers.map((transfer) => (\n          <TransferCard\n            // eslint-disable-next-line no-underscore-dangle\n            key={transfer._id}\n            transfer={transfer}\n            transferCardEvent={handleTransferCardEvent}\n          />\n        ))\n      }\n      <TransferModal\n        open={openTransferDialog}\n        actionTransfer={actionTransfer}\n        transferDialogEvent={handleTransferDialogEvent}\n        transferData={transferDataDialog}\n      />\n      <ConfirmModal\n        open={openConfirmModal}\n        confirmModalEvent={handleConfirmModalEvents}\n        confirmModalData={confirmModalData}\n      />\n    </div>\n  );\n};\n\nexport default DashboardHomePage;\n","import React from 'react';\n\nconst ProfilePage = () => {\n  console.log('hey');\n  return (\n    <>\n      <h1>este es el perfil</h1>\n    </>\n  );\n};\n\nexport default ProfilePage;\n","import React from 'react';\n\nconst DashboardGeneralBalancePage = () => {\n  console.log('hol');\n  return (\n    <div>\n      <h1>\n        En esta pagina ira en balance general\n      </h1>\n    </div>\n  );\n};\n\nexport default DashboardGeneralBalancePage;\n","import React from 'react';\n\nconst DashboardCreditPage = () => {\n  console.log('hola');\n  return (\n    <>\n      <hi>Aqui ira el calculo de las fechas y montos de tarjetas de credito</hi>\n    </>\n  );\n};\n\nexport default DashboardCreditPage;\n","import {\n  AppBar, Container, IconButton, List, ListItem, ListItemIcon,\n  ListItemText, makeStyles, Menu, MenuItem, SwipeableDrawer,\n  Toolbar, Typography,\n} from '@material-ui/core';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport { Link } from 'react-router-dom';\nimport React, { useState } from 'react';\n// import PropTypes from 'prop-types';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Route, Switch, useRouteMatch } from 'react-router';\nimport DashboardHomePage from '../pages/DashboardHomePage';\nimport ProfilePage from '../pages/ProfilePage';\nimport DashboardGeneralBalancePage from '../pages/DashboardGeneralBalancePage';\nimport DashboardCreditPage from '../pages/DashboardCreditPage';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  addBtn: {\n    width  : '100%',\n    margin : '20px 0',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  fullList: {\n    width: 250,\n  },\n  list: {\n    width: 250,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  container: {\n    backgroundColor: '#f5f5f5',\n  },\n}));\n\nconst DashboardRouter = () => {\n  const classes = useStyles();\n\n  const { path, url } = useRouteMatch();\n  const [drawer, setDrawer] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  const toggleDrawer = (opened) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setDrawer(opened);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={toggleDrawer(true)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\n            Mi chanchito\n          </Typography>\n\n          <div>\n            <IconButton\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical   : 'top',\n                horizontal : 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical   : 'top',\n                horizontal : 'right',\n              }}\n              open={open}\n              onClose={handleClose}\n            >\n              {/* <MenuItem onClick={handleClose}>Profile</MenuItem> */}\n              <MenuItem onClick={handleClose}>Cerrar sesion</MenuItem>\n            </Menu>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <SwipeableDrawer\n        anchor=\"left\"\n        open={drawer}\n        onClose={toggleDrawer(false)}\n        onOpen={toggleDrawer(true)}\n      >\n        <div className={classes.fullList}>\n          {/* {list('left')} */}\n          <List>\n            <ListItem button component={Link} to={`${url}/perfil`}>\n              <ListItemIcon>\n                <MenuIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Perfil\" />\n            </ListItem>\n            <ListItem button component={Link} to={`${url}/home`}>\n              <ListItemIcon>\n                <MenuIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Inicio\" />\n            </ListItem>\n            <ListItem button component={Link} to={`${url}/general-balance`}>\n              <ListItemIcon>\n                <MenuIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Balance general\" />\n            </ListItem>\n            <ListItem button component={Link} to={`${url}/credit`}>\n              <ListItemIcon>\n                <MenuIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Credito\" />\n            </ListItem>\n          </List>\n        </div>\n      </SwipeableDrawer>\n\n      <div className={classes.container}>\n        <Container fixed maxWidth=\"md\">\n          <Switch>\n            <Route exact path={`${path}/home`}>\n              <DashboardHomePage />\n            </Route>\n            <Route path={`${path}/perfil`}>\n              <ProfilePage />\n            </Route>\n            <Route path={`${path}/general-balance`}>\n              <DashboardGeneralBalancePage />\n            </Route>\n            <Route path={`${path}/credit`}>\n              <DashboardCreditPage />\n            </Route>\n\n            <Route path=\"*\">\n              <DashboardHomePage />\n            </Route>\n          </Switch>\n        </Container>\n\n      </div>\n    </>\n  );\n};\n\nDashboardRouter.propTypes = {\n\n};\n\nexport default DashboardRouter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router';\n\nconst PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  console.log('gg');\n  return (\n    <Route\n      {...rest}\n      component={(props) => (\n        isAuthenticated\n          ? (<Component {...props} />)\n          : (<Redirect to=\"/auth\" />)\n      )}\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  isAuthenticated : PropTypes.bool.isRequired,\n  component       : PropTypes.func.isRequired,\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router';\n\nconst PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  console.log('dd');\n  return (\n    <Route\n      {...rest}\n      component={(props) => (\n        !isAuthenticated\n          ? (<Component {...props} />)\n          : (<Redirect to=\"/dashboard\" />)\n      )}\n    />\n  );\n};\n\nPublicRoute.propTypes = {\n  isAuthenticated : PropTypes.bool.isRequired,\n  component       : PropTypes.func.isRequired,\n};\n\nexport default PublicRoute;\n","import React, { useContext } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n} from 'react-router-dom';\nimport AuthContext from '../contexts/auth.context';\nimport AuthPage from '../pages/AuthPage';\nimport HomePage from '../pages/HomePage';\nimport DashboardRouter from './DashboardRouter';\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\n\nconst AppRouter = () => {\n  console.log('router');\n  const { user } = useContext(AuthContext);\n  console.log('user', user);\n  return (\n    <>\n      <Router>\n        <div>\n          <Switch>\n            <PublicRoute\n              path=\"/auth\"\n              isAuthenticated={!!user.token}\n              component={AuthPage}\n            />\n            <PrivateRoute\n              path=\"/dashboard\"\n              isAuthenticated={!!user.token}\n              component={DashboardRouter}\n            />\n            <PublicRoute\n              path=\"/\"\n              isAuthenticated={!!user.token}\n              component={HomePage}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n};\n\nexport default AppRouter;\n","import { useReducer } from 'react';\nimport './App.css';\nimport AuthContext from './contexts/auth.context';\nimport authReducer from './reducers/auth.reducer';\nimport AppRouter from './routers/AppRouter';\n\nconst init = () => JSON.parse(localStorage.getItem('user')) || { logged: false };\n\nfunction App() {\n  const [user, dispatch] = useReducer(authReducer, {}, init);\n\n  return (\n    <AuthContext.Provider value={{ user, dispatch }}>\n      <AppRouter />\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","exports.cashFlowLabels = {\n  ingreso : 'ingreso',\n  egreso  : 'egreso',\n};\n\nexports.actionsTransfer = {\n  create : '[actionsTransfer] create',\n  update : '[actionsTransfer] update',\n};\n\nexports.eventsTransferDialog = {\n  create : '[eventsTransferDialog] create',\n  update : '[eventsTransferDialog] update',\n  close  : '[eventsTransferDialog] close',\n};\n\nexports.eventsTransferCard = {\n  update : '[eventsTransferCard] update',\n  delete : '[eventsTransferCard] delete',\n};\n","exports.typesConfirmModal = {\n  close   : '[confirmModalEvents] close',\n  confirm : '[confirmModalEvents] confirm',\n};\n","const addLeadingZeros = (n) => ((n <= 9) ? `0${n}` : n);\n\nexports.formatInputDate = (date) => {\n  const currentDatetime = new Date(date);\n  const year = currentDatetime.getFullYear();\n  const month = addLeadingZeros(currentDatetime.getMonth() + 1);\n  const day = addLeadingZeros(currentDatetime.getDate());\n  return `${year}-${month}-${day}`;\n};\n\nexports.formatDate = (date, sign = '-') => {\n  const currentDatetime = new Date(date);\n  const year = currentDatetime.getFullYear();\n  const month = addLeadingZeros(currentDatetime.getMonth() + 1);\n  const day = addLeadingZeros(currentDatetime.getDate());\n  return `${day}${sign}${month}${sign}${year}`;\n};\n"],"sourceRoot":""}